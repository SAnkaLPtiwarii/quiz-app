{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsank\\\\Desktop\\\\quiz-app\\\\client\\\\src\\\\components\\\\CreateCustomQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateCustomQuiz() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [questions, setQuestions] = useState([{\n    question: '',\n    correct_answer: '',\n    incorrect_answers: ['', '', '']\n  }]);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/quiz/custom', {\n        title,\n        questions\n      });\n      alert('Custom quiz created successfully!');\n      navigate('/');\n    } catch (error) {\n      console.error('Error creating custom quiz:', error);\n    }\n  };\n  const addQuestion = () => {\n    setQuestions([...questions, {\n      question: '',\n      correct_answer: '',\n      incorrect_answers: ['', '', '']\n    }]);\n  };\n  const updateQuestion = (index, field, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index][field] = value;\n    setQuestions(updatedQuestions);\n  };\n  const updateIncorrectAnswer = (questionIndex, answerIndex, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].incorrect_answers[answerIndex] = value;\n    setQuestions(updatedQuestions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-quiz-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-quiz-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Your Custom Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Quiz Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), questions.map((q, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Question \", qIndex + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: q.question,\n          onChange: e => updateQuestion(qIndex, 'question', e.target.value),\n          placeholder: \"Question\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: q.correct_answer,\n          onChange: e => updateQuestion(qIndex, 'correct_answer', e.target.value),\n          placeholder: \"Correct Answer\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), q.incorrect_answers.map((a, aIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: a,\n          onChange: e => updateIncorrectAnswer(qIndex, aIndex, e.target.value),\n          placeholder: `Incorrect Answer ${aIndex + 1}`,\n          required: true\n        }, aIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this))]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addQuestion,\n        className: \"add-question-btn\",\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateCustomQuiz, \"BGBkkBN7braTwjhxOeBgQ93K2iw=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateCustomQuiz;\nexport default CreateCustomQuiz;\nvar _c;\n$RefreshReg$(_c, \"CreateCustomQuiz\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","CreateCustomQuiz","_s","title","setTitle","questions","setQuestions","question","correct_answer","incorrect_answers","navigate","handleSubmit","e","preventDefault","post","alert","error","console","addQuestion","updateQuestion","index","field","value","updatedQuestions","updateIncorrectAnswer","questionIndex","answerIndex","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","placeholder","required","map","q","qIndex","a","aIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tsank/Desktop/quiz-app/client/src/components/CreateCustomQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction CreateCustomQuiz() {\r\n    const [title, setTitle] = useState('');\r\n    const [questions, setQuestions] = useState([{ question: '', correct_answer: '', incorrect_answers: ['', '', ''] }]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:5000/api/quiz/custom', { title, questions });\r\n            alert('Custom quiz created successfully!');\r\n            navigate('/');\r\n        } catch (error) {\r\n            console.error('Error creating custom quiz:', error);\r\n        }\r\n    };\r\n\r\n    const addQuestion = () => {\r\n        setQuestions([...questions, { question: '', correct_answer: '', incorrect_answers: ['', '', ''] }]);\r\n    };\r\n\r\n    const updateQuestion = (index, field, value) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[index][field] = value;\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const updateIncorrectAnswer = (questionIndex, answerIndex, value) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[questionIndex].incorrect_answers[answerIndex] = value;\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-quiz-container\">\r\n            <form className=\"create-quiz-form\" onSubmit={handleSubmit}>\r\n                <h2>Create Your Custom Quiz</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    placeholder=\"Quiz Title\"\r\n                    required\r\n                />\r\n                {questions.map((q, qIndex) => (\r\n                    <div key={qIndex} className=\"question-group\">\r\n                        <h3>Question {qIndex + 1}</h3>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={q.question}\r\n                            onChange={(e) => updateQuestion(qIndex, 'question', e.target.value)}\r\n                            placeholder=\"Question\"\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={q.correct_answer}\r\n                            onChange={(e) => updateQuestion(qIndex, 'correct_answer', e.target.value)}\r\n                            placeholder=\"Correct Answer\"\r\n                            required\r\n                        />\r\n                        {q.incorrect_answers.map((a, aIndex) => (\r\n                            <input\r\n                                key={aIndex}\r\n                                type=\"text\"\r\n                                value={a}\r\n                                onChange={(e) => updateIncorrectAnswer(qIndex, aIndex, e.target.value)}\r\n                                placeholder={`Incorrect Answer ${aIndex + 1}`}\r\n                                required\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n                <button type=\"button\" onClick={addQuestion} className=\"add-question-btn\">Add Question</button>\r\n                <button type=\"submit\">Create Quiz</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCustomQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}