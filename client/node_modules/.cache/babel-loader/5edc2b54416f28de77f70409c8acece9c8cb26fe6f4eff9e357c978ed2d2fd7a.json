{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsank\\\\Desktop\\\\quiz-app\\\\client\\\\src\\\\components\\\\CreateCustomQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateCustomQuiz() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [questions, setQuestions] = useState([{\n    question: '',\n    correct_answer: '',\n    incorrect_answers: ['', '', '']\n  }]);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/quiz/custom', {\n        title,\n        questions\n      });\n      alert('Custom quiz created successfully!');\n      history.push('/');\n    } catch (error) {\n      console.error('Error creating custom quiz:', error);\n    }\n  };\n  const addQuestion = () => {\n    setQuestions([...questions, {\n      question: '',\n      correct_answer: '',\n      incorrect_answers: ['', '', '']\n    }]);\n  };\n  const updateQuestion = (index, field, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[index][field] = value;\n    setQuestions(updatedQuestions);\n  };\n  const updateIncorrectAnswer = (questionIndex, answerIndex, value) => {\n    const updatedQuestions = [...questions];\n    updatedQuestions[questionIndex].incorrect_answers[answerIndex] = value;\n    setQuestions(updatedQuestions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Custom Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Quiz Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), questions.map((q, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: q.question,\n        onChange: e => updateQuestion(qIndex, 'question', e.target.value),\n        placeholder: \"Question\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: q.correct_answer,\n        onChange: e => updateQuestion(qIndex, 'correct_answer', e.target.value),\n        placeholder: \"Correct Answer\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), q.incorrect_answers.map((a, aIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: a,\n        onChange: e => updateIncorrectAnswer(qIndex, aIndex, e.target.value),\n        placeholder: `Incorrect Answer ${aIndex + 1}`,\n        required: true\n      }, aIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this))]\n    }, qIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addQuestion,\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateCustomQuiz, \"BGBkkBN7braTwjhxOeBgQ93K2iw=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateCustomQuiz;\nexport default CreateCustomQuiz;\nvar _c;\n$RefreshReg$(_c, \"CreateCustomQuiz\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","CreateCustomQuiz","_s","title","setTitle","questions","setQuestions","question","correct_answer","incorrect_answers","navigate","handleSubmit","e","preventDefault","post","alert","history","push","error","console","addQuestion","updateQuestion","index","field","value","updatedQuestions","updateIncorrectAnswer","questionIndex","answerIndex","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","placeholder","required","map","q","qIndex","a","aIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tsank/Desktop/quiz-app/client/src/components/CreateCustomQuiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction CreateCustomQuiz() {\r\n    const [title, setTitle] = useState('');\r\n    const [questions, setQuestions] = useState([{ question: '', correct_answer: '', incorrect_answers: ['', '', ''] }]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:5000/api/quiz/custom', { title, questions });\r\n            alert('Custom quiz created successfully!');\r\n            history.push('/');\r\n        } catch (error) {\r\n            console.error('Error creating custom quiz:', error);\r\n        }\r\n    };\r\n\r\n    const addQuestion = () => {\r\n        setQuestions([...questions, { question: '', correct_answer: '', incorrect_answers: ['', '', ''] }]);\r\n    };\r\n\r\n    const updateQuestion = (index, field, value) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[index][field] = value;\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    const updateIncorrectAnswer = (questionIndex, answerIndex, value) => {\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[questionIndex].incorrect_answers[answerIndex] = value;\r\n        setQuestions(updatedQuestions);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Create Custom Quiz</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Quiz Title\"\r\n                required\r\n            />\r\n            {questions.map((q, qIndex) => (\r\n                <div key={qIndex}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={q.question}\r\n                        onChange={(e) => updateQuestion(qIndex, 'question', e.target.value)}\r\n                        placeholder=\"Question\"\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        value={q.correct_answer}\r\n                        onChange={(e) => updateQuestion(qIndex, 'correct_answer', e.target.value)}\r\n                        placeholder=\"Correct Answer\"\r\n                        required\r\n                    />\r\n                    {q.incorrect_answers.map((a, aIndex) => (\r\n                        <input\r\n                            key={aIndex}\r\n                            type=\"text\"\r\n                            value={a}\r\n                            onChange={(e) => updateIncorrectAnswer(qIndex, aIndex, e.target.value)}\r\n                            placeholder={`Incorrect Answer ${aIndex + 1}`}\r\n                            required\r\n                        />\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <button type=\"button\" onClick={addQuestion}>Add Question</button>\r\n            <button type=\"submit\">Create Quiz</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CreateCustomQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}